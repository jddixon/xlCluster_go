xlCluster_go/pktComms/TODO 

-------------------
FROM paxos_go/TODO:
-------------------

2014-11-25
    * bootstrap.go functionality moves into xlReg_go                    * DONE

2014-11-20
    * restructure to use Clusters rather than xlReg functions and       * DONE
        structures, except in testing                                   * DONE

2014-11-12 (-10-14, edit in progress)                                   * DROP
    CONFUSED:                                                           * DROP
    * need changes to xlReg: serialization (String()) and               * DROP
        deserialization (ParseMemberNode()) functiona for MemberNode,   * DROP
        which is in xlReg_go/memberNode.go                              * DROP
    * then need de/serialization tests                                  * DROP

2014-10-24
    * minor change to v0.3.1 due to xlReg_go change not yet committed   * DONE

2014-10-14 (edited from 09-20)                      
    * Bootstrap.Run() morphs into HelloToPeers

2014-10-13
    * FIX: helloGoodbye_test.go now hangs                               * DONE

2014-10-12
    * revise tests to use SHA1 instead of SHA3 (because we need to      * DONE
        use SHA1 in digital signatures)                                 * DONE

2014-09-16
    * FIX panic in helloGoodBye_test.go                                 * DONE
    * pktLayer.JoinCluster() should signal on pktLayer.DoneCh when      * DONE
        done, sending pktLayer.DoneCh <- err                            * DONE
        - hmmm, that's unsafe; make DoneCh a chan(error)                * YEP
    * pktLayer.HelloToPeers() handled like JoinCluster
    * pktLayer.KeepAlives() 
    * pktLayer.Switch()
    * pktLayer.SendByes()

2014-09-15
    * helloGoodbye_test.go spins up K nodes; each says hello to its
        K-1 peers, pause, then send Bye to peers and shuts down
        - all functionality in misc_test.go, called using one-liners
    * when helloGoodbye_test.go runs OK, modify keepAlive_test.go
        to use the same approach; so it just adds another one-liner

2014-09-12
    * revise keep_alive_test to follow xlReg_go/eph_server_test.go
        as model
        - this means scrapping or revising functions in misc_test.go

2014-09-11
    * Fix references to hash in p_test.go, which should actually refer  *
        to the SHA1-based digital signature
    * Fix the test itself, which should fail because it's a hash rather
        than the expected digSig

2014-09-09
    * Link to online documenation in README.md must *NOT* appear in
        ghpDoc/index.md

    * Need to specify a protocol for commands sent to the server;
        the protocol in p.proto is suitable only for communications
        between the servers in a cluster.

    * Need a test which spawns a cluster of N servers, runs say K
        keep-alives, then shuts down with Bye/Ack.  The low-level
        code must make available the attributes of cluster members
        (ID, listening address (ipv4+port), sigPubKey, commsPubKey,
        isLive, a boolean.  We also expose quorate, a boolean which
        is true if a majority of cluster members are live.

2014-09-07
    * edit gocheck_test.go, recently stolen from xlReg_u, to a form
        more appropriate for testing paxos_go

    * review makeACluster -- it would seem to generate nodes where
        we have no knowledge of their private keys, and so which are
        of limited value
