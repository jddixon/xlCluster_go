// Code generated by protoc-gen-go.
// source: paxos.proto
// DO NOT EDIT!

/*
Package pktComms is a generated protocol buffer package.

It is generated from these files:
	paxos.proto

It has these top-level messages:
	Prepare
	Promise
	Nack
	Accept
	Accepted
*/
package pktComms

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Prepare struct {
	N                *uint64 `protobuf:"varint,1,opt" json:"N,omitempty"`
	Salt             []byte  `protobuf:"bytes,12,opt" json:"Salt,omitempty"`
	DigSig           []byte  `protobuf:"bytes,13,opt" json:"DigSig,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Prepare) Reset()         { *m = Prepare{} }
func (m *Prepare) String() string { return proto.CompactTextString(m) }
func (*Prepare) ProtoMessage()    {}

func (m *Prepare) GetN() uint64 {
	if m != nil && m.N != nil {
		return *m.N
	}
	return 0
}

func (m *Prepare) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *Prepare) GetDigSig() []byte {
	if m != nil {
		return m.DigSig
	}
	return nil
}

type Promise struct {
	N                *uint64 `protobuf:"varint,1,opt" json:"N,omitempty"`
	I                *uint64 `protobuf:"varint,2,opt" json:"I,omitempty"`
	Na               *uint64 `protobuf:"varint,3,opt" json:"Na,omitempty"`
	Va               []byte  `protobuf:"bytes,4,opt" json:"Va,omitempty"`
	Salt             []byte  `protobuf:"bytes,12,opt" json:"Salt,omitempty"`
	DigSig           []byte  `protobuf:"bytes,13,opt" json:"DigSig,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Promise) Reset()         { *m = Promise{} }
func (m *Promise) String() string { return proto.CompactTextString(m) }
func (*Promise) ProtoMessage()    {}

func (m *Promise) GetN() uint64 {
	if m != nil && m.N != nil {
		return *m.N
	}
	return 0
}

func (m *Promise) GetI() uint64 {
	if m != nil && m.I != nil {
		return *m.I
	}
	return 0
}

func (m *Promise) GetNa() uint64 {
	if m != nil && m.Na != nil {
		return *m.Na
	}
	return 0
}

func (m *Promise) GetVa() []byte {
	if m != nil {
		return m.Va
	}
	return nil
}

func (m *Promise) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *Promise) GetDigSig() []byte {
	if m != nil {
		return m.DigSig
	}
	return nil
}

type Nack struct {
	N                *uint64 `protobuf:"varint,1,opt" json:"N,omitempty"`
	I                *uint64 `protobuf:"varint,2,opt" json:"I,omitempty"`
	Na               *uint64 `protobuf:"varint,3,opt" json:"Na,omitempty"`
	Salt             []byte  `protobuf:"bytes,12,opt" json:"Salt,omitempty"`
	DigSig           []byte  `protobuf:"bytes,13,opt" json:"DigSig,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Nack) Reset()         { *m = Nack{} }
func (m *Nack) String() string { return proto.CompactTextString(m) }
func (*Nack) ProtoMessage()    {}

func (m *Nack) GetN() uint64 {
	if m != nil && m.N != nil {
		return *m.N
	}
	return 0
}

func (m *Nack) GetI() uint64 {
	if m != nil && m.I != nil {
		return *m.I
	}
	return 0
}

func (m *Nack) GetNa() uint64 {
	if m != nil && m.Na != nil {
		return *m.Na
	}
	return 0
}

func (m *Nack) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *Nack) GetDigSig() []byte {
	if m != nil {
		return m.DigSig
	}
	return nil
}

type Accept struct {
	N                *uint64 `protobuf:"varint,1,opt" json:"N,omitempty"`
	I                *uint64 `protobuf:"varint,2,opt" json:"I,omitempty"`
	Vn               []byte  `protobuf:"bytes,3,opt" json:"Vn,omitempty"`
	Salt             []byte  `protobuf:"bytes,12,opt" json:"Salt,omitempty"`
	DigSig           []byte  `protobuf:"bytes,13,opt" json:"DigSig,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Accept) Reset()         { *m = Accept{} }
func (m *Accept) String() string { return proto.CompactTextString(m) }
func (*Accept) ProtoMessage()    {}

func (m *Accept) GetN() uint64 {
	if m != nil && m.N != nil {
		return *m.N
	}
	return 0
}

func (m *Accept) GetI() uint64 {
	if m != nil && m.I != nil {
		return *m.I
	}
	return 0
}

func (m *Accept) GetVn() []byte {
	if m != nil {
		return m.Vn
	}
	return nil
}

func (m *Accept) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *Accept) GetDigSig() []byte {
	if m != nil {
		return m.DigSig
	}
	return nil
}

type Accepted struct {
	N                *uint64 `protobuf:"varint,1,opt" json:"N,omitempty"`
	I                *uint64 `protobuf:"varint,2,opt" json:"I,omitempty"`
	Salt             []byte  `protobuf:"bytes,12,opt" json:"Salt,omitempty"`
	DigSig           []byte  `protobuf:"bytes,13,opt" json:"DigSig,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Accepted) Reset()         { *m = Accepted{} }
func (m *Accepted) String() string { return proto.CompactTextString(m) }
func (*Accepted) ProtoMessage()    {}

func (m *Accepted) GetN() uint64 {
	if m != nil && m.N != nil {
		return *m.N
	}
	return 0
}

func (m *Accepted) GetI() uint64 {
	if m != nil && m.I != nil {
		return *m.I
	}
	return 0
}

func (m *Accepted) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *Accepted) GetDigSig() []byte {
	if m != nil {
		return m.DigSig
	}
	return nil
}

func init() {
}
